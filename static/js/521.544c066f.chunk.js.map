{"version":3,"file":"static/js/521.544c066f.chunk.js","mappings":"2VAgNA,UAzLe,WACX,IAAMA,GAAIC,EAAAA,EAAAA,IAAU,KAAM,KAAM,UAC1BC,GAASD,EAAAA,EAAAA,IAAU,KAAM,KAAM,UAC7BE,GAAUC,EAAAA,EAAAA,MAAVD,MAEFE,GAAWC,EAAAA,EAAAA,UACXC,GAASD,EAAAA,EAAAA,UACfE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAoCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwCrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAEjBC,GAA+BC,EAAAA,EAAAA,MAAkBC,GAAA3B,EAAAA,EAAAA,GAAAyB,EAAA,GAA1CG,EAAKD,EAAA,GACZE,GADyBF,EAAA,GAATG,WACUC,EAAAA,EAAAA,OAAnBC,IAA+ChC,EAAAA,EAAAA,GAAA6B,EAAA,GAAhC,GAChBI,IAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAGN,GAFAzC,EAAS0C,QAAQC,QAEO,SADAC,EAAAA,EAAAA,IAAY,cACJ,CAC5BxB,GAAc,GACd,IAAMyB,EAAaD,EAAAA,EAAAA,IAAY,SAC/BpC,EAASqC,GAAc,GAC3B,CAEJ,GAAG,KAEHJ,EAAAA,EAAAA,YAAU,WACNjB,EAAU,GACd,GAAG,CAACjB,EAAOI,IAEX,IAQMmC,GAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OADrBP,EAAEQ,iBACFhC,GAAgB,GAAK6B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMzB,EAAM,CAAE3B,MAAAA,EAAOI,SAAAA,IAAYkD,SAAQ,OAApDR,EAAQI,EAAAK,KACdlB,EAAAA,EAAAA,IAAY,aAAczB,EAAY,CAAE4C,QAAS,KAC7C5C,EACAyB,EAAAA,EAAAA,IAAY,QAASrC,EAAO,CAAEwD,QAAS,KAEvCnB,EAAAA,EAAAA,OAAe,SAEnBhB,GAAgB,GACXyB,EAASW,OAA+B,GAAtBX,EAASY,WAK5B1B,GAAS,CAAE2B,KAAMC,EAAAA,GAAiBC,QAASf,IAxBnDf,KAAkBuB,SAASQ,MAAK,SAASC,GAClCA,GAAOA,EAAIC,UAA2B,IAAfD,EAAIC,UAAiBD,EAAIE,cAAoC,IAApBF,EAAIE,cACnEjC,GAAS,CAAE2B,KAAMO,EAAAA,GAAaL,QAASE,GAE/C,IAAGI,OAAM,SAASC,GAAKC,QAAQC,IAAIF,EAAI,IAsB/BnE,EAAS,IACTI,EAAY,IACRd,GAASA,EAAMgF,KACfjD,EAAS/B,EAAMgF,MAEfjD,EAAS,UAAW,CAAEkD,SAAS,MAX7BzB,EAAS,CAAE0B,UAAW3B,EAAS4B,WAAY1E,MAAO8C,EAAS9C,OACjEgC,GAAS,CAAE2B,KAAMgB,EAAAA,GAAmBd,QAASd,IAC7CzB,EAAS,yBAA0B,CAAEkD,SAAS,KAWjDtB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0B,GAAA1B,EAAA,SAED7B,GAAgB,GACZ,OAAA6B,EAAA0B,SAAA,IAAA1B,EAAA0B,IAAC1B,EAAA0B,GAAKC,OAGgB,MAAf3B,EAAA0B,GAAIC,QACL7B,EAAYE,EAAA0B,GAAIE,KACtBT,QAAQC,IAAItB,GACTA,EAAU+B,iBACT9D,EAAU7B,EAAE,SAAS4D,EAAU+B,iBAAiB,KAEhD9D,EAAU7B,EAAE,wBAEM,MAAf8D,EAAA0B,GAAIC,OACX5D,EAAU7B,EAAE,sCAEZ6B,EAAU7B,EAAE,uBAZZ6B,EAAU7B,EAAE,6BAaf,yBAAA8D,EAAA8B,OAAA,GAAApC,EAAA,mBAER,gBA9CiBqC,GAAA,OAAAzC,EAAA0C,MAAA,KAAAC,UAAA,KA6DlB,OAAQC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAOrG,EAAE,YAEjBmG,EAAAA,EAAAA,KAAA,OAAKG,MAAM,aAAYJ,UACnBF,EAAAA,EAAAA,MAAA,QAAMO,GAAG,oBAAoBC,UAAU,iCAAiCC,SAAUtD,GAAa+C,SAAA,EAC3FC,EAAAA,EAAAA,KAAA,OAAKG,MAAM,qCAAoCJ,UAC3CF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,uBAAsBJ,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,4CAA2CJ,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACH,GAAG,OAAOI,IAAKC,IAAW,QACzFT,EAAAA,EAAAA,KAAA,OAAKG,MAAM,8DAA6DJ,SAAEhG,EAAO,wBACjF8F,EAAAA,EAAAA,MAAA,OAAKM,MAAM,uBAAsBJ,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOM,MAAM,gCAAgCO,IAAI,QAAOX,SAAA,CAAElG,EAAE,UAASmG,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaN,SAAC,UACnGC,EAAAA,EAAAA,KAAA,SACI5B,KAAK,QACLgC,GAAG,QACHO,KAAK,QACLN,UAAU,eACVO,aAAa,QACbC,YAAahH,EAAE,eACfiH,UAAQ,EACRC,IAAK7G,EACL8G,MAAOvG,EACPwG,SAlCH,SAAC3D,GAAC,OAAK5C,EAAS4C,EAAE4D,OAAOF,MAAM,QAqCpCnB,EAAAA,EAAAA,MAAA,OAAKM,MAAM,kBAAiBJ,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAOM,MAAM,gCAAgCO,IAAI,WAAUX,SAAA,CAAElG,EAAE,aAAYmG,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaN,SAAC,UACzGF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,qBAAoBN,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACI5B,KAAMnD,EAAe,OAAS,WAC9BmF,GAAG,WACHO,KAAK,WACLN,UAAU,eACVQ,YAAahH,EAAE,kBACfiH,UAAQ,EACRG,SA7CJ,SAAC3D,GAAC,OAAKxC,EAAYwC,EAAE4D,OAAOF,MAAM,EA8C9BA,MAAOnG,EACP+F,aAAa,sBAEjBZ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAAUG,IAAKvF,EAAekG,EAAUC,EAASC,QA/C3D,SAAC/D,GAC9BA,EAAEQ,iBACF5C,GAAiBD,EACrB,WAiDoB4E,EAAAA,EAAAA,MAAA,OAAKM,MAAM,WAAUJ,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKG,MAAM,WAAUJ,UACjBF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,kBAAiBJ,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOG,MAAM,mBACb/B,KAAK,WACLkD,QAASjG,EACT4F,SArDD,SAACM,GAC5BjG,EAAciG,EAAML,OAAOI,QAC/B,EAoDgCE,MAAO,CAAEC,UAAW,KAAOrB,GAAG,gBAC9BJ,EAAAA,EAAAA,KAAA,SAAOG,MAAM,yBAAyBO,IAAI,aAAYX,SACjDlG,EAAE,uBAIfmG,EAAAA,EAAAA,KAAA,OAAKG,MAAM,WAAUJ,UACjBF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,mCAAkCJ,SAAA,CAAE,KAACC,EAAAA,EAAAA,KAAA,KAAG0B,KAAK,mBAAmBF,MAAO,CAAEG,UAAW,SAAU5B,UAACC,EAAAA,EAAAA,KAAA,SAAOG,MAAM,aAAYJ,SAAElG,EAAE,wBAAgC,aAI/KmG,EAAAA,EAAAA,KAAA,OAAKG,MAAM,uCAAsCJ,SAC5ClE,GAAemE,EAAAA,EAAAA,KAAA,UAAQG,MAAM,sBAAsByB,UAAU,EAAK7B,UAACC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAO,CAACC,UAAU,SAASC,QAAQ,cAAuB/B,EAAAA,EAAAA,KAAA,UAAQG,MAAM,sBAAqBJ,SAAElG,EAAE,oBAIjL4B,GAAUuE,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAAcD,QAAQ,SAASP,MAAO,CAAEG,UAAW,UAAYZ,IAAK3G,EAAO2F,SAAGtE,GAAzE,UAA4F,IAClHuE,EAAAA,EAAAA,KAAA,OAAKG,MAAM,0BAAyBJ,UAChCF,EAAAA,EAAAA,MAAA,KAAG6B,KAAK,UAAUvB,MAAM,wBAAuBJ,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAOlG,EAAE,4BAAkC,KAACmG,EAAAA,EAAAA,KAAA,KAAGK,UAAU,OAAOqB,KAAK,UAAS3B,SAAElG,EAAE,2BAI9ImG,EAAAA,EAAAA,KAAA,OAAKG,MAAM,aAAaqB,MAAO,CAAES,gBAAgB,OAADC,OAASC,EAAa,UAO9E,C","sources":["features/auth/pages/SignIn.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { useLoginMutation } from \"./../slices/authApiSlice\";\r\nimport { useGetSavedFiltersMutation } from '../../membre/slices/membreApiSlice';\r\n\r\nimport { SET_CREDENTIALS, SET_PERSONAL_INFO, SET_FILTERS } from \"../../../redux/constants/actionTypes\";\r\nimport logoPng from './../../../assets/images/100g_vert.png'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet'\r\nimport { getFixedT } from 'i18next';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport showImg from './../../../assets/images/show-30.png'\r\nimport hideImg from './../../../assets/images/hide-30.png'\r\nimport './../css/auth.css'\r\n\r\nimport backgroundPng from './../../../assets/images/signin.png'\r\n\r\nconst SignIn = () => {\r\n    const t = getFixedT(null, null, 'signin')\r\n    const t_comm = getFixedT(null, null, 'common')\r\n    const { state } = useLocation();\r\n\r\n    const emailRef = useRef()\r\n    const errRef = useRef()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('')\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const [login, { isLoading }] = useLoginMutation()\r\n    const [getSavedFilters] = useGetSavedFiltersMutation();\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        emailRef.current.focus()\r\n        const rememberMeValue = Cookies.get('rememberMe');\r\n        if (rememberMeValue === 'true') {\r\n            setRememberMe(true);\r\n            const savedEmail = Cookies.get('email');\r\n            setEmail(savedEmail || '');\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('')\r\n    }, [email, password])\r\n\r\n    const setInitialFilter = () =>{\r\n        getSavedFilters().unwrap().then(function(res){\r\n            if(res && res.category && res.category !='' && res.sub_category && res.sub_category != ''){\r\n                dispatch({ type: SET_FILTERS, payload: res })\r\n            }\r\n        }).catch(function(err){console.log(err)})\r\n\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setIsProcessing(true)\r\n        try {\r\n            const userData = await login({ email, password }).unwrap()\r\n            Cookies.set('rememberMe', rememberMe, { expires: 30 });\r\n            if (rememberMe) {\r\n                Cookies.set('email', email, { expires: 30 });\r\n            } else {\r\n                Cookies.remove('email');\r\n            }\r\n            setIsProcessing(false)\r\n            if (!userData.token || userData.is_active == false) {\r\n                const params = { firstName: userData.first_name, email: userData.email }\r\n                dispatch({ type: SET_PERSONAL_INFO, payload: params })\r\n                navigate('/2-factor-verification', { replace: true })\r\n            } else {\r\n                dispatch({ type: SET_CREDENTIALS, payload: userData })\r\n                setInitialFilter()\r\n                setEmail('')\r\n                setPassword('')\r\n                if (state && state.from) {\r\n                    navigate(state.from);\r\n                } else {\r\n                    navigate('/membre', { replace: true })\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setIsProcessing(false)\r\n            if (!err?.status) {\r\n                // isLoading: true until timeout occurs\r\n                setErrMsg(t('error.No Server Response'));\r\n            } else if (err.status === 400) {\r\n                const errorData = err.data\r\n                console.log(errorData)\r\n                if(errorData.non_field_errors){\r\n                    setErrMsg(t('error.'+errorData.non_field_errors[0]));\r\n                }else{\r\n                    setErrMsg(t('error.Login Failed'));\r\n                }\r\n            } else if (err.status === 401) {\r\n                setErrMsg(t('You cannot use that email address'));\r\n            } else {\r\n                setErrMsg(t('error.Login Failed'));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEmailInput = (e) => setEmail(e.target.value)\r\n\r\n    const handlePasswordInput = (e) => setPassword(e.target.value)\r\n\r\n    const togglePasswordVisibility = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleRememberMeChange = (event) => {\r\n        setRememberMe(event.target.checked);\r\n    };\r\n\r\n    return (<>\r\n        <Helmet title={t('title')} />\r\n\r\n        <div class=\"card card1\">\r\n            <form id=\"customerLoginForm\" className=\"form-inner customer-login-form\" onSubmit={handleSubmit}>\r\n                <div class=\"row justify-content-center my-auto\">\r\n                    <div class=\"col-md-8 col-10 my-5\">\r\n                        <div class=\"row justify-content-center px-3 py-5 mb-3\"> <Image id=\"logo\" src={logoPng} /> </div>\r\n                        <div class=\"row justify-content-center px-3 py-5 mb-3 introductory-text\">{t_comm('introductory text')}</div>\r\n                        <div class=\"form-group my-5 mt-3\">\r\n                            <label class=\"form-control-label text-muted\" for=\"email\">{t('Email')}<span className=\"text-danger\">*</span></label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name='email'\r\n                                className=\"form-control\"\r\n                                autoComplete=\"email\"\r\n                                placeholder={t('Enter Email')}\r\n                                required\r\n                                ref={emailRef}\r\n                                value={email}\r\n                                onChange={handleEmailInput}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group my-5\">\r\n                            <label class=\"form-control-label text-muted\" for=\"password\">{t('Password')}<span className=\"text-danger\">*</span></label>\r\n                            <div className='password-container'>\r\n                                <input\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    id=\"password\"\r\n                                    name='password'\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('Enter Password')}\r\n                                    required\r\n                                    onChange={handlePasswordInput}\r\n                                    value={password}\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <img className='eye-img' src={showPassword ? hideImg : showImg} onClick={togglePasswordVisibility}>\r\n                                </img>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row my-3\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-check my-3\">\r\n                                    <input class=\"form-check-input\" \r\n                                    type=\"checkbox\" \r\n                                    checked={rememberMe} \r\n                                    onChange={handleRememberMeChange}\r\n                                    style={{ marginTop: '0' }} id=\"rememberMe\" />\r\n                                    <label class=\"form-check-label  mx-1\" for=\"rememberMe\">\r\n                                        {t('Remember Me')}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"row justify-content-center my-3 \" > <a href=\"/forget-password\" style={{ textAlign: 'right' }}><small class=\"text-muted\">{t('Forgot Password?')}</small></a> </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row justify-content-center my-3 px-3\">\r\n                            {isProcessing ? <button class=\"btn-block btn-color\" disabled={true}><Spinner animation=\"border\" variant=\"danger\" /></button> : <button class=\"btn-block btn-color\">{t('Sign In')}</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {errMsg ? (<Alert key='danger' variant='danger' style={{ textAlign: 'center' }} ref={errRef} >{errMsg}</Alert>) : \"\"}\r\n                <div class=\"bottom text-center mb-5\">\r\n                    <p href=\"/signup\" class=\"sm-text mx-auto mb-3 \"><span>{t('Don\\'t have an account?')}</span> <a className='ml-3' href='/signup'>{t('Create new')}</a></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"card card2\" style={{ backgroundImage: `url(${backgroundPng})` }}>\r\n        </div>\r\n\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default SignIn;"],"names":["t","getFixedT","t_comm","state","useLocation","emailRef","useRef","errRef","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","rememberMe","setRememberMe","_useState9","_useState10","errMsg","setErrMsg","_useState11","_useState12","isProcessing","setIsProcessing","navigate","useNavigate","_useLoginMutation","useLoginMutation","_useLoginMutation2","login","_useGetSavedFiltersMu","isLoading","useGetSavedFiltersMutation","getSavedFilters","dispatch","useDispatch","useEffect","current","focus","Cookies","savedEmail","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","userData","params","errorData","wrap","_context","prev","next","preventDefault","unwrap","sent","expires","token","is_active","type","SET_CREDENTIALS","payload","then","res","category","sub_category","SET_FILTERS","catch","err","console","log","from","replace","firstName","first_name","SET_PERSONAL_INFO","t0","status","data","non_field_errors","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Helmet","title","class","id","className","onSubmit","Image","src","logoPng","for","name","autoComplete","placeholder","required","ref","value","onChange","target","hideImg","showImg","onClick","checked","event","style","marginTop","href","textAlign","disabled","Spinner","animation","variant","Alert","backgroundImage","concat","backgroundPng"],"sourceRoot":""}