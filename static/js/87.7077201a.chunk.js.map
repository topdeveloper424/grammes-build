{"version":3,"file":"static/js/87.7077201a.chunk.js","mappings":"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","sources":["features/auth/pages/PersonalInfo.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SET_PERSONAL_INFO } from \"../../../redux/constants/actionTypes\";\r\nimport logoPng from './../../../assets/images/100g_vert.png'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet'\r\nimport { getFixedT } from 'i18next';\r\nimport { useSendVerifyCodeMutation } from '../slices/authApiSlice';\r\nimport 'react-phone-number-input/style.css'\r\n// import PhoneInput from 'react-phone-number-input'\r\n// import flags from 'react-phone-number-input/flags'\r\n\r\nimport showImg from './../../../assets/images/show-30.png'\r\nimport hideImg from './../../../assets/images/hide-30.png'\r\nimport backgroundPng from './../../../assets/images/signup.png'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../css/auth.css'\r\n\r\nconst PersonalInfo = () => {\r\n    const t = getFixedT(null, null, 'signup')\r\n    const t_comm = getFixedT(null, null, 'common')\r\n    const firstNameRef = useRef()\r\n    const errRef = useRef()\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [errMsg, setErrMsg] = useState('')\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [agreeTc, setAgreeTc] = useState(false)\r\n    const [understandQb, setUnderstandQb] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const [sendVerifyCode, { isLoading }] = useSendVerifyCodeMutation()\r\n\r\n    useEffect(() => {\r\n        firstNameRef.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('')\r\n    }, [firstName, lastName, email, password, phoneNumber])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword) {\r\n            setErrMsg(t(\"Confirm password doesn't match\"))\r\n            return;\r\n        }\r\n\r\n        var lowerCase = /[a-z]/g;\r\n        var upperCase = /[A-Z]/g;\r\n        var numbers = /[0-9]/g;\r\n        var variant = 'Error'\r\n        var message = '';\r\n        if (!password.match(lowerCase)) {\r\n            message = t('Password should contains lowercase letters!')\r\n        } else if (!password.match(upperCase)) {\r\n            message = t('Password should contain uppercase letters!')\r\n        } else if (!password.match(numbers)) {\r\n            message = t('Password should contains numbers also!')\r\n        } else if (password.length < 8) {\r\n            message = t('Password length should be more than 8!')\r\n        } else if (password != confirmPassword) {\r\n            message = t('Password confirmation doesn\\'t match!')\r\n        } else {\r\n            variant = 'Success'\r\n        }\r\n        if (variant == 'Error') {\r\n            setErrMsg(message);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsProcessing(true)\r\n            const params = { firstName, lastName, email, phoneNumber, password, step: 2 }\r\n            const userData = await sendVerifyCode({ email: email, type: 'SIGNUP', first_name: firstName }).unwrap()\r\n            setIsProcessing(false)\r\n            dispatch({ type: SET_PERSONAL_INFO, payload: params })\r\n            setFirstName('')\r\n            setLastName('')\r\n            setEmail('')\r\n            setPhoneNumber('')\r\n            setPassword('')\r\n            setConfirmPassword('')\r\n            navigate('/verification')\r\n        } catch (err) {\r\n            setIsProcessing(false)\r\n            console.log(err)\r\n            setErrMsg(t(err.data.message));\r\n        }\r\n    }\r\n\r\n    const handleFirstNameInput = (e) => setFirstName(e.target.value)\r\n\r\n    const handleLastNameInput = (e) => setLastName(e.target.value)\r\n\r\n    const handleEmailInput = (e) => setEmail(e.target.value)\r\n\r\n    const handlePasswordInput = (e) => setPassword(e.target.value)\r\n\r\n    const handleConfirmPasswordInput = (e) => setConfirmPassword(e.target.value)\r\n\r\n    const togglePasswordVisibility = (e) => {\r\n        e.preventDefault()\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const isFormValid = () => {\r\n        // Define your form validation logic here\r\n        // For example, check if all mandatory fields are filled\r\n        return firstName && lastName && email && password && confirmPassword && agreeTc == true && understandQb == true;\r\n    };\r\n\r\n    return (<>\r\n        <Helmet title={t('title')} />\r\n        <div class=\"card card1\">\r\n            <form id=\"customerLoginForm\" className=\"form-inner customer-login-form\" onSubmit={handleSubmit}>\r\n                <div class=\"row justify-content-center my-auto\">\r\n                    <div class=\"col-md-8 col-10 my-4\">\r\n                        <div class=\"row justify-content-center px-3 mb-3\"> <Image id=\"logo\" src={logoPng} /> </div>\r\n                        <div class=\"row justify-content-center px-3 py-5 mb-3 introductory-text\">{t_comm('introductory text')}</div>\r\n                        <div className='row mt-3'>\r\n                            <div className='col-md-12'>\r\n                                <div className=\"form-group my-2\">\r\n                                    <label class=\"form-control-label text-muted\" for=\"firstName\">{t('First Name')}<span>*</span></label>\r\n                                    <input type=\"text\"\r\n                                        autoComplete=\"given-name\"\r\n                                        className=\"form-control\"\r\n                                        name=\"firstName\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        placeholder={t('Enter First Name')}\r\n                                        ref={firstNameRef}\r\n                                        value={firstName}\r\n                                        onChange={handleFirstNameInput}\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <div className=\"form-group my-2\">\r\n                                    <label class=\"form-control-label text-muted\" for=\"lastName\">{t('Last Name')}<span>*</span></label>\r\n                                    <input type=\"text\"\r\n                                        required\r\n                                        fullWidth\r\n                                        className=\"form-control\"\r\n                                        id=\"lastName\"\r\n                                        placeholder={t('Enter Last Name')}\r\n                                        name=\"lastName\"\r\n                                        value={lastName}\r\n                                        onChange={handleLastNameInput}\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group my-2\">\r\n                            <label class=\"form-control-label text-muted\" for=\"email\">{t('Email')}<span>*</span></label>\r\n                            <input type=\"email\"\r\n                                required\r\n                                className=\"form-control\"\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                placeholder={t('Enter Email Address')}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleEmailInput}\r\n                                autoComplete=\"email\"\r\n\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"form-group my-1\">\r\n                        <label class=\"form-control-label text-muted\" for=\"phoneNumber\">{t('Phone Number')}<span>*</span></label>\r\n                        <PhoneInput \r\n                            rules={{ required: true }}\r\n                            defaultCountry=\"US\"\r\n                            fullWidth\r\n                            id=\"phoneNumber\"\r\n                            placeholder={t('Phone Number')}\r\n                            name=\"phoneNumber\"\r\n                            value={phoneNumber}\r\n                            onChange={setPhoneNumber}\r\n                            autoComplete=\"phoneNumber\"\r\n                            flags={flags}\r\n\r\n                        />\r\n                    </div> */}\r\n                        <div className=\"form-group my-3\">\r\n                            <label class=\"form-control-label text-muted\" for=\"password\">{t('Password')}<span>*</span></label>\r\n                            <div className='password-container'>\r\n                                <input\r\n                                    required\r\n                                    fullWidth\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    placeholder={t('Enter Password')}\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    id=\"password\"\r\n                                    onChange={handlePasswordInput}\r\n                                    value={password}\r\n                                    autoComplete=\"new-password\"\r\n\r\n                                />\r\n                                <img className='eye-img' src={showPassword ? hideImg : showImg} onClick={togglePasswordVisibility}>\r\n                                </img>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"form-group my-3\">\r\n                            <label class=\"form-control-label text-muted\" for=\"confirmPassword\">{t('Confirm Password')}<span>*</span></label>\r\n                            <input\r\n                                required\r\n                                fullWidth\r\n                                className=\"form-control\"\r\n                                name=\"confirmPassword\"\r\n                                placeholder={t('Enter Confirm Password')}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"confirmPassword\"\r\n                                onChange={handleConfirmPasswordInput}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"new-password\"\r\n\r\n                            />\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 mt-2\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id='agreeTc' checked={agreeTc} style={{ marginTop: '0' }} required onChange={(e) => setAgreeTc(e.target.checked)} />\r\n                                    <label class=\"form-check-label  mx-1\" for=\"agreeTc\">\r\n                                        {t('I accept')} <a href='https://www.100grammes.ca/termes-et-conditions' target='_blank'>{t('Terms and conditions')}</a>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-4\">\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id='understandQb' checked={understandQb} style={{ marginTop: '0' }} required onChange={(e) => setUnderstandQb(e.target.checked)} />\r\n                                    <label class=\"form-check-label  mx-1\" for=\"understandQb\">\r\n                                        {t('I understand 100 grammes is available in Quebec only')}\r\n                                        &nbsp;&nbsp;&nbsp;\r\n                                        <a href='https://www.100grammes.ca/faq#commencer' target='_blank'>{t('What else should I know?')}</a>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row justify-content-center my-3 px-3\">\r\n                            {isProcessing ? <button class=\"btn-block btn-color\" disabled={true}><Spinner animation=\"border\" variant=\"danger\" /></button> : <button class=\"btn-block btn-color\" disabled={!isFormValid()}>{t('Sign Up')}</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {errMsg ? (<Alert key='danger' variant='danger' style={{ textAlign: 'center' }} ref={errRef} >{errMsg}</Alert>) : \"\"}\r\n                <div class=\"bottom text-center mb-5\">\r\n                    <p href=\"/signup\" class=\"sm-text mx-auto mb-3 \"><span>{t('Have an account?')}</span> <a className='ml-3' href='/signin'>{t('Sign In')}</a></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"card card2\" style={{ backgroundImage: `url(${backgroundPng})` }}>\r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default PersonalInfo;"],"names":["t","getFixedT","t_comm","firstNameRef","useRef","errRef","_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","phoneNumber","setPhoneNumber","_useState9","_useState10","password","setPassword","_useState11","_useState12","confirmPassword","setConfirmPassword","_useState13","_useState14","errMsg","setErrMsg","_useState15","_useState16","isProcessing","setIsProcessing","_useState17","_useState18","showPassword","setShowPassword","_useState19","_useState20","agreeTc","setAgreeTc","_useState21","_useState22","understandQb","setUnderstandQb","navigate","useNavigate","dispatch","useDispatch","_useSendVerifyCodeMut","useSendVerifyCodeMutation","_useSendVerifyCodeMut2","sendVerifyCode","isLoading","useEffect","current","focus","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","lowerCase","upperCase","numbers","variant","message","params","wrap","_context","prev","next","preventDefault","abrupt","match","length","step","type","first_name","unwrap","sent","SET_PERSONAL_INFO","payload","t0","console","log","data","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Helmet","title","class","id","className","onSubmit","Image","src","logoPng","for","autoComplete","name","required","fullWidth","placeholder","ref","value","onChange","target","autoFocus","hideImg","showImg","onClick","checked","style","marginTop","href","disabled","Spinner","animation","Alert","textAlign","backgroundImage","concat","backgroundPng"],"sourceRoot":""}