{"version":3,"file":"static/js/34.5319323b.chunk.js","mappings":"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","sources":["features/auth/pages/TwoFactorVerification.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet'\r\nimport { getFixedT } from 'i18next';\r\nimport logoPng from './../../../assets/images/100g_vert.png'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../css/auth.css'\r\nimport { useVerifyCodeMutation, useSendVerifyCodeMutation } from '../slices/authApiSlice';\r\nimport { useGetSavedFiltersMutation } from '../../membre/slices/membreApiSlice';\r\nimport { SET_CREDENTIALS, SET_FILTERS } from '../../../redux/constants/actionTypes';\r\nimport backgroundPng from './../../../assets/images/2fa.png'\r\n\r\nconst TwoFactorVerification = () => {\r\n    const t = getFixedT(null, null, 'signup')\r\n    const email = useSelector((state) => state.step.email)\r\n    const firstName = useSelector((state) => state.step.firstName)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [inputValues, setInputValues] = useState({\r\n        code1: '',\r\n        code2: '',\r\n        code3: '',\r\n        code4: '',\r\n    });\r\n\r\n    const [sendMsg, setSendMsg] = useState(null)\r\n    const inputRef1 = useRef(null);\r\n    const inputRef2 = useRef(null);\r\n    const inputRef3 = useRef(null);\r\n    const inputRef4 = useRef(null);\r\n\r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    const [sendVerifyCode] = useSendVerifyCodeMutation()\r\n    const [getSavedFilters] = useGetSavedFiltersMutation();\r\n\r\n    const [verifyCode, { isLoading }] = useVerifyCodeMutation()\r\n    useEffect(() => {\r\n        inputRef1.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(inputValues.code1 != '' && inputValues.code2 != '' && inputValues.code3 != '' && inputValues.code4 != ''){\r\n            setIsDisabled(false);\r\n        }else{\r\n            setIsDisabled(true);\r\n        }\r\n\r\n    }, [inputValues])\r\n\r\n    const setInitialFilter = () =>{\r\n        getSavedFilters().unwrap().then(function(res){\r\n            if(res && res.category && res.category !='' && res.sub_category && res.sub_category != ''){\r\n                dispatch({ type: SET_FILTERS, payload: res })\r\n            }\r\n        }).catch(function(err){console.log(err)})\r\n\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const code = inputRef1.current.value + inputRef2.current.value + inputRef3.current.value + inputRef4.current.value;\r\n            const userData = await verifyCode({ code: code, email: email, type: 'TWO_FACTOR' }).unwrap()\r\n            dispatch({ type: SET_CREDENTIALS, payload: userData })\r\n            setInitialFilter()\r\n            navigate('/membre', { replace: true })\r\n        } catch (err) {\r\n            console.log(err)\r\n            const data = err.data\r\n            if (!err?.status) {\r\n                // isLoading: true until timeout occurs\r\n                setErrMsg(t(data.message));\r\n            } else if (err.status === 400) {\r\n                setErrMsg(t(data.message));\r\n            } else {\r\n                setErrMsg(t(data.message));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleResend = async () => {\r\n        try {\r\n            setIsProcessing(true)\r\n            const userData = await sendVerifyCode({ email: email, type: 'TWO_FACTOR', first_name: firstName }).unwrap()\r\n            setSendMsg(t('Successfully Sent! Please check your inbox'))\r\n            setErrMsg('')\r\n            setIsProcessing(false)\r\n        } catch (err) {\r\n            setIsProcessing(false)\r\n            console.log(err)\r\n            setErrMsg(t(err.data.message));\r\n        }\r\n\r\n    }\r\n\r\n    const handlePaste = (e) => {\r\n        const pastedCode = e.clipboardData.getData('Text');\r\n\r\n        // Assuming the verification code is 4 characters long\r\n        if (pastedCode.length === 4) {\r\n            setInputValues({\r\n                code1: pastedCode.charAt(0),\r\n                code2: pastedCode.charAt(1),\r\n                code3: pastedCode.charAt(2),\r\n                code4: pastedCode.charAt(3),\r\n            });\r\n        }\r\n    };\r\n\r\n    const numberChangeHandler = (e, num) => {\r\n        const numericValue = e.target.value.replace(/\\D/g, '');\r\n        if (num == 1) {\r\n            setInputValues({ ...inputValues, code1: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef2.current.focus()\r\n            }\r\n        } else if (num == 2) {\r\n            setInputValues({ ...inputValues, code2: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef3.current.focus()\r\n            }\r\n        } else if (num == 3) {\r\n            setInputValues({ ...inputValues, code3: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef4.current.focus()\r\n            }\r\n        } else if (num == 4) {\r\n            setInputValues({ ...inputValues, code4: numericValue })\r\n        }\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Helmet title={t('Two-Factor Verification')} />\r\n        <div class=\"card card1\">\r\n            <form id=\"customerLoginForm\" className=\"form-inner customer-login-form\" onSubmit={handleSubmit}>\r\n                <div class=\"row justify-content-center my-auto\">\r\n                    <div class=\"col-md-8 col-10 my-5\">\r\n                        <div class=\"row justify-content-center px-3 py-4 mb-3\"> <Image id=\"logo\" src={logoPng} /> </div>\r\n\r\n                        <h5 class=\"m-0 my-2 my-2\">{t('Email verification')}</h5><p class=\"mobile-text\">{t('Enter the code we just send on your email')} <b class=\"text-danger\">{email}</b></p>\r\n                        <div class=\"d-flex flex-row mt-5\">\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code1} required ref={inputRef1} onChange={(e) => numberChangeHandler(e, 1)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code2} required ref={inputRef2} onChange={(e) => numberChangeHandler(e, 2)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code3} required ref={inputRef3} onChange={(e) => numberChangeHandler(e, 3)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code4} required ref={inputRef4} onChange={(e) => numberChangeHandler(e, 4)} onPaste={(e) => handlePaste(e)} />\r\n                        </div>\r\n                        <div class=\"text-center mt-5\"><p class=\"d-block mobile-text\">{t('Don\\'t receive the code?')}</p><p class=\"font-weight-bold text-danger cursor\" onClick={() => handleResend()}>{t('Resend')}</p></div>\r\n\r\n                        <div class=\"row justify-content-center my-3 px-3\">\r\n                            {isProcessing ? <button class=\"btn-block btn-color\" disabled={true}><Spinner animation=\"border\" variant=\"danger\" /></button> : <button class=\"btn-block btn-color\" disabled={isDisabled}>{t('Verify')}</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {errMsg ? (<Alert key='danger' variant='danger' style={{ textAlign: 'center' }} >{errMsg}</Alert>) : \"\"}\r\n                {sendMsg ? (<Alert key='success' variant='success' style={{ textAlign: 'center' }} >{sendMsg}</Alert>) : \"\"}\r\n            </form>\r\n        </div>\r\n        <div class=\"card card2\" style={{ backgroundImage: `url(${backgroundPng})` }}>\r\n        </div>\r\n\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default TwoFactorVerification;"],"names":["t","getFixedT","email","useSelector","state","step","firstName","_useState","useState","_useState2","_slicedToArray","isProcessing","setIsProcessing","_useState3","_useState4","isDisabled","setIsDisabled","navigate","useNavigate","dispatch","useDispatch","_useState5","code1","code2","code3","code4","_useState6","inputValues","setInputValues","_useState7","_useState8","sendMsg","setSendMsg","inputRef1","useRef","inputRef2","inputRef3","inputRef4","_useState9","_useState10","errMsg","setErrMsg","_useSendVerifyCodeMut","useSendVerifyCodeMutation","sendVerifyCode","_useGetSavedFiltersMu","useGetSavedFiltersMutation","getSavedFilters","_useVerifyCodeMutatio","useVerifyCodeMutation","_useVerifyCodeMutatio2","verifyCode","isLoading","useEffect","current","focus","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","code","userData","data","wrap","_context","prev","next","preventDefault","value","type","unwrap","sent","SET_CREDENTIALS","payload","then","res","category","sub_category","SET_FILTERS","catch","err","console","log","replace","t0","status","message","stop","_x","apply","arguments","handleResend","_ref2","_callee2","_context2","first_name","handlePaste","pastedCode","clipboardData","getData","length","charAt","numberChangeHandler","num","numericValue","target","_objectSpread","_jsxs","_Fragment","children","_jsx","Helmet","title","class","id","className","onSubmit","Image","src","logoPng","maxLength","required","ref","onChange","onPaste","onClick","disabled","Spinner","animation","variant","Alert","style","textAlign","backgroundImage","concat","backgroundPng"],"sourceRoot":""}