{"version":3,"file":"static/js/867.252e60d9.chunk.js","mappings":"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","sources":["features/auth/pages/PhoneVerification.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Image } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet'\r\nimport { getFixedT } from 'i18next';\r\n\r\n\r\nimport { SET_STEP } from \"../../../redux/constants/actionTypes\";\r\nimport logoPng from './../../../assets/images/100g_vert.png'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../css/auth.css'\r\nimport { useVerifyCodeMutation, useSendVerifyCodeMutation } from '../slices/authApiSlice';\r\nimport backgroundPng from './../../../assets/images/2fa.png'\r\n\r\nconst PhoneVerification = () => {\r\n    const t = getFixedT(null, null, 'signup')\r\n    const email = useSelector((state) => state.step.email)\r\n    const firstName = useSelector((state) => state.step.firstName)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [inputValues, setInputValues] = useState({\r\n        code1: '',\r\n        code2: '',\r\n        code3: '',\r\n        code4: '',\r\n    });\r\n\r\n    const [sendMsg, setSendMsg] = useState(null)\r\n    const inputRef1 = useRef(null);\r\n    const inputRef2 = useRef(null);\r\n    const inputRef3 = useRef(null);\r\n    const inputRef4 = useRef(null);\r\n\r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    const [sendVerifyCode] = useSendVerifyCodeMutation()\r\n\r\n    const [verifyCode, { isLoading }] = useVerifyCodeMutation()\r\n    useEffect(() => {\r\n        inputRef1.current.focus()\r\n        console.log(\"inputValues\",inputValues)\r\n        if(inputValues.code1 != '' && inputValues.code2 != '' && inputValues.code3 != '' && inputValues.code4 != ''){\r\n            setIsDisabled(false);\r\n        }else{\r\n            setIsDisabled(true);\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(inputValues.code1 != '' && inputValues.code2 != '' && inputValues.code3 != '' && inputValues.code4 != ''){\r\n            setIsDisabled(false);\r\n        }else{\r\n            setIsDisabled(true);\r\n        }\r\n\r\n    }, [inputValues])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const code = inputRef1.current.value + inputRef2.current.value + inputRef3.current.value + inputRef4.current.value;\r\n            const userData = await verifyCode({ code: code, email: email, type: 'SIGNUP' }).unwrap()\r\n            dispatch({ type: SET_STEP, payload: { step: 3 } })\r\n            navigate('/pricing')\r\n        } catch (err) {\r\n            console.log(err)\r\n            const data = err.data\r\n            if (!err?.status) {\r\n                // isLoading: true until timeout occurs\r\n                setErrMsg(t(data.message));\r\n            } else if (err.status === 400) {\r\n                setErrMsg(t(data.message));\r\n            } else {\r\n                setErrMsg(t(data.message));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleResend = async () => {\r\n        try {\r\n            setIsProcessing(true)\r\n            const userData = await sendVerifyCode({ email: email, type: 'SIGNUP', first_name: firstName }).unwrap()\r\n            setSendMsg(t('Successfully Sent! Please check your inbox'))\r\n            setErrMsg('')\r\n            setIsProcessing(false)\r\n        } catch (err) {\r\n            setIsProcessing(false)\r\n            console.log(err)\r\n            setErrMsg(t(err.data.message));\r\n        }\r\n\r\n    }\r\n\r\n    const handlePaste = (e) => {\r\n        const pastedCode = e.clipboardData.getData('Text');\r\n\r\n        // Assuming the verification code is 4 characters long\r\n        if (pastedCode.length === 4) {\r\n            setInputValues({\r\n                code1: pastedCode.charAt(0),\r\n                code2: pastedCode.charAt(1),\r\n                code3: pastedCode.charAt(2),\r\n                code4: pastedCode.charAt(3),\r\n            });\r\n        }\r\n    };\r\n\r\n    const numberChangeHandler = (e, num) => {\r\n        const numericValue = e.target.value.replace(/\\D/g, '');\r\n        if (num == 1) {\r\n            setInputValues({ ...inputValues, code1: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef2.current.focus()\r\n            }\r\n        } else if (num == 2) {\r\n            setInputValues({ ...inputValues, code2: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef3.current.focus()\r\n            }\r\n        } else if (num == 3) {\r\n            setInputValues({ ...inputValues, code3: numericValue })\r\n            if (numericValue.length > 0) {\r\n                inputRef4.current.focus()\r\n            }\r\n        } else if (num == 4) {\r\n            setInputValues({ ...inputValues, code4: numericValue })\r\n        }\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Helmet title={t('title')} />\r\n        <div class=\"card card1\">\r\n            <form id=\"customerLoginForm\" className=\"form-inner customer-login-form\" onSubmit={handleSubmit}>\r\n                <div class=\"row justify-content-center my-auto\">\r\n                    <div class=\"col-md-8 col-10 my-5\">\r\n                        <div class=\"row justify-content-center px-3 py-4 mb-3\"> <Image id=\"logo\" src={logoPng} /> </div>\r\n\r\n                        <h5 class=\"m-0 my-2 my-2\">{t('Email verification')}</h5><p class=\"mobile-text\">{t('Enter the code we just send on your email')} <b class=\"text-danger\">{email}</b></p>\r\n                        <div class=\"d-flex flex-row mt-5\">\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code1} required ref={inputRef1} onChange={(e) => numberChangeHandler(e, 1)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code2} required ref={inputRef2} onChange={(e) => numberChangeHandler(e, 2)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code3} required ref={inputRef3} onChange={(e) => numberChangeHandler(e, 3)} onPaste={(e) => handlePaste(e)} />\r\n                            <input type=\"tel\" class=\"form-control phone-input mx-3\" maxLength={1} value={inputValues.code4} required ref={inputRef4} onChange={(e) => numberChangeHandler(e, 4)} onPaste={(e) => handlePaste(e)} />\r\n                        </div>\r\n                        <div class=\"text-center mt-5\"><p class=\"d-block mobile-text\">{t('Don\\'t receive the code?')}</p><p class=\"font-weight-bold text-danger cursor\" onClick={() => handleResend()}>{t('Resend')}</p></div>\r\n\r\n                        <div class=\"row justify-content-center my-3 px-3\">\r\n                            {isProcessing ? <button class=\"btn-block btn-color\" disabled={true}><Spinner animation=\"border\" variant=\"danger\" /></button> : <button class=\"btn-block btn-color\" disabled={isDisabled}>{t('Verify')}</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {errMsg ? (<Alert key='danger' variant='danger' style={{ textAlign: 'center' }} >{errMsg}</Alert>) : \"\"}\r\n                {sendMsg ? (<Alert key='success' variant='success' style={{ textAlign: 'center' }} >{sendMsg}</Alert>) : \"\"}\r\n            </form>\r\n\r\n        </div>\r\n        <div class=\"card card2\" style={{ backgroundImage: `url(${backgroundPng})` }}>\r\n        </div>\r\n\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\nexport default PhoneVerification;"],"names":["t","getFixedT","email","useSelector","state","step","firstName","_useState","useState","_useState2","_slicedToArray","isProcessing","setIsProcessing","_useState3","_useState4","isDisabled","setIsDisabled","navigate","useNavigate","dispatch","useDispatch","_useState5","code1","code2","code3","code4","_useState6","inputValues","setInputValues","_useState7","_useState8","sendMsg","setSendMsg","inputRef1","useRef","inputRef2","inputRef3","inputRef4","_useState9","_useState10","errMsg","setErrMsg","_useSendVerifyCodeMut","useSendVerifyCodeMutation","sendVerifyCode","_useVerifyCodeMutatio","useVerifyCodeMutation","_useVerifyCodeMutatio2","verifyCode","isLoading","useEffect","current","focus","console","log","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","code","data","wrap","_context","prev","next","preventDefault","value","type","unwrap","sent","SET_STEP","payload","t0","status","message","stop","_x","apply","arguments","handleResend","_ref2","_callee2","_context2","first_name","handlePaste","pastedCode","clipboardData","getData","length","charAt","numberChangeHandler","num","numericValue","target","replace","_objectSpread","_jsxs","_Fragment","children","_jsx","Helmet","title","class","id","className","onSubmit","Image","src","logoPng","maxLength","required","ref","onChange","onPaste","onClick","disabled","Spinner","animation","variant","Alert","style","textAlign","backgroundImage","concat","backgroundPng"],"sourceRoot":""}